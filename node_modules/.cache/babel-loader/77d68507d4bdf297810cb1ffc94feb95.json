{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karre\\\\OneDrive\\\\Documents\\\\final year project\\\\nutrition app\\\\nutrition-app\\\\src\\\\components\\\\ForgotPasswordpage.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport style from '../design/style.css';\nimport authlogo from '../design/authlogo.png';\n//import { useNavigate } from \"react-router-dom\";\n// this page deals with resetting password to an email\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgotPasswordpage() {\n  _s();\n  //const declaration\n\n  const emailRef = useRef();\n  const {\n    resetPassword\n  } = useAuth(); //calling resetpassword from AuthContext\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false); //by default we are not loading at all, this will only be true once we have inputted valid email\n  //  const navigate = useNavigate()\n\n  //async function ie. a function that always return a promise\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      setMessage('');\n      setError('');\n      setLoading(true); //prevents user from clicking 'Reset Password' button multiple times \n      await resetPassword(emailRef.current.value); //checks if user email already exists through firebase\n      setMessage('An email has been sent for password reset');\n    } catch {\n      setError('Failed to reset password');\n    }\n    setLoading(false);\n  }\n\n  //skeleton of what forgotpassword page looks like\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"banner2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"forgotpasswordbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: authlogo,\n          class: \"authlogo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"PALATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"alertbox\",\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            ref: emailRef,\n            name: \"\",\n            placeholder: \"Enter Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            disabled: loading,\n            name: \"\",\n            value: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/signup\",\n            children: \"Create New Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPasswordpage, \"lW9fucxleehjL6tNMtzlUZes0qI=\", false, function () {\n  return [useAuth];\n});\n_c = ForgotPasswordpage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordpage\");","map":{"version":3,"names":["React","useRef","useState","Alert","useAuth","style","authlogo","ForgotPasswordpage","emailRef","resetPassword","error","setError","message","setMessage","loading","setLoading","handleSubmit","e","preventDefault","current","value"],"sources":["C:/Users/karre/OneDrive/Documents/final year project/nutrition app/nutrition-app/src/components/ForgotPasswordpage.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport style from '../design/style.css'\r\nimport authlogo from '../design/authlogo.png'\r\n//import { useNavigate } from \"react-router-dom\";\r\n// this page deals with resetting password to an email\r\n\r\n\r\nexport default function ForgotPasswordpage() {\r\n\r\n//const declaration\r\n\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth() //calling resetpassword from AuthContext\r\n  const [error, setError] = useState('')\r\n  const[message, setMessage]= useState('')\r\n  const [loading, setLoading] = useState(false) //by default we are not loading at all, this will only be true once we have inputted valid email\r\n//  const navigate = useNavigate()\r\n\r\n  //async function ie. a function that always return a promise\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n  \r\n\r\n    try{\r\n      setMessage('')\r\n      setError('')\r\n      setLoading(true) //prevents user from clicking 'Reset Password' button multiple times \r\n      await resetPassword(emailRef.current.value)//checks if user email already exists through firebase\r\n      setMessage('An email has been sent for password reset')\r\n    } catch{\r\n      setError('Failed to reset password')\r\n    }\r\n    \r\n    setLoading(false)\r\n  }\r\n\r\n\r\n  //skeleton of what forgotpassword page looks like\r\n  return (\r\n    <body>\r\n        <div class=\"banner2\">\r\n          <div class=\"forgotpasswordbox\">\r\n                <img src ={authlogo} class=\"authlogo\"/>\r\n                  <h1>PALATE</h1>\r\n                  {error && <Alert className=\"alertbox\" variant=\"danger\">{error}</Alert>}<br/>\r\n                  <form onSubmit={handleSubmit}>\r\n                    <p>Email</p>\r\n                    <input type=\"email\" ref={emailRef} name=\"\" placeholder=\"Enter Email\"/>\r\n                    <input type=\"submit\" disabled={loading} name=\"\" value=\"Reset Password\"/>\r\n                    <a href=\"/signup\">Create New Account</a>\r\n                  </form>\r\n          </div>\r\n        </div>\r\n    </body>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C;AACA;AAAA;AAGA,eAAe,SAASC,kBAAkB,GAAG;EAAA;EAE7C;;EAEE,MAAMC,QAAQ,GAAGP,MAAM,EAAE;EACzB,MAAM;IAAEQ;EAAc,CAAC,GAAGL,OAAO,EAAE,EAAC;EACpC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAK,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAEX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,EAAC;EAChD;;EAEE;EACA,eAAec,YAAY,CAACC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAGlB,IAAG;MACDL,UAAU,CAAC,EAAE,CAAC;MACdF,QAAQ,CAAC,EAAE,CAAC;MACZI,UAAU,CAAC,IAAI,CAAC,EAAC;MACjB,MAAMN,aAAa,CAACD,QAAQ,CAACW,OAAO,CAACC,KAAK,CAAC;MAC3CP,UAAU,CAAC,2CAA2C,CAAC;IACzD,CAAC,CAAC,MAAK;MACLF,QAAQ,CAAC,0BAA0B,CAAC;IACtC;IAEAI,UAAU,CAAC,KAAK,CAAC;EACnB;;EAGA;EACA,oBACE;IAAA,uBACI;MAAK,KAAK,EAAC,SAAS;MAAA,uBAClB;QAAK,KAAK,EAAC,mBAAmB;QAAA,wBACxB;UAAK,GAAG,EAAGT,QAAS;UAAC,KAAK,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAE,eACrC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,EACdI,KAAK,iBAAI,QAAC,KAAK;UAAC,SAAS,EAAC,UAAU;UAAC,OAAO,EAAC,QAAQ;UAAA,UAAEA;QAAK;UAAA;UAAA;UAAA;QAAA,QAAS,eAAC;UAAA;UAAA;UAAA;QAAA,QAAK,eAC5E;UAAM,QAAQ,EAAEM,YAAa;UAAA,wBAC3B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAY,eACZ;YAAO,IAAI,EAAC,OAAO;YAAC,GAAG,EAAER,QAAS;YAAC,IAAI,EAAC,EAAE;YAAC,WAAW,EAAC;UAAa;YAAA;YAAA;YAAA;UAAA,QAAE,eACtE;YAAO,IAAI,EAAC,QAAQ;YAAC,QAAQ,EAAEM,OAAQ;YAAC,IAAI,EAAC,EAAE;YAAC,KAAK,EAAC;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAE,eACxE;YAAG,IAAI,EAAC,SAAS;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAuB;QAAA;UAAA;UAAA;UAAA;QAAA,QACnC;MAAA;QAAA;QAAA;QAAA;MAAA;IACT;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACH;AAEX;AAAC,GAhDuBP,kBAAkB;EAAA,QAKdH,OAAO;AAAA;AAAA,KALXG,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}